///
/// JSeekerDimensions.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "SeekerDimensions.hpp"

#include <optional>

namespace margelo::nitro::seekbar {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "SeekerDimensions" and the the Kotlin data class "SeekerDimensions".
   */
  struct JSeekerDimensions final: public jni::JavaClass<JSeekerDimensions> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/seekbar/SeekerDimensions;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct SeekerDimensions by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    SeekerDimensions toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldTrackHeight = clazz->getField<jni::JDouble>("trackHeight");
      jni::local_ref<jni::JDouble> trackHeight = this->getFieldValue(fieldTrackHeight);
      static const auto fieldProgressHeight = clazz->getField<jni::JDouble>("progressHeight");
      jni::local_ref<jni::JDouble> progressHeight = this->getFieldValue(fieldProgressHeight);
      static const auto fieldThumbRadius = clazz->getField<jni::JDouble>("thumbRadius");
      jni::local_ref<jni::JDouble> thumbRadius = this->getFieldValue(fieldThumbRadius);
      static const auto fieldGap = clazz->getField<jni::JDouble>("gap");
      jni::local_ref<jni::JDouble> gap = this->getFieldValue(fieldGap);
      return SeekerDimensions(
        trackHeight != nullptr ? std::make_optional(trackHeight->value()) : std::nullopt,
        progressHeight != nullptr ? std::make_optional(progressHeight->value()) : std::nullopt,
        thumbRadius != nullptr ? std::make_optional(thumbRadius->value()) : std::nullopt,
        gap != nullptr ? std::make_optional(gap->value()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JSeekerDimensions::javaobject> fromCpp(const SeekerDimensions& value) {
      return newInstance(
        value.trackHeight.has_value() ? jni::JDouble::valueOf(value.trackHeight.value()) : nullptr,
        value.progressHeight.has_value() ? jni::JDouble::valueOf(value.progressHeight.value()) : nullptr,
        value.thumbRadius.has_value() ? jni::JDouble::valueOf(value.thumbRadius.value()) : nullptr,
        value.gap.has_value() ? jni::JDouble::valueOf(value.gap.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::seekbar
